openapi: 3.0.0

info:
  title: IQB Testcenter API - Backend
  description: "This a spec for the (REST-) API of the IQB-Testcenter Application.
    It will be used to make backend's e2e-test and a mock-server for frontend's e2e-tests.
    It's the basis for our vision of continuous integration."
  version: "%%%VERSION%%%"

paths: {}

components:
  schemas:

    auth:
      type: object
      properties:
        at:
          type: string
          description: authtoken f√ºr admin and maybe super admin modules
          example: user000000000.superadmin0
      required:
        - at


    login_request:
      type: object
      properties:
        name:
          type: string
          description: Username
          example: super
        password:
          type: string
          description: Password
          example: user123


    session:
      description: content of a session
      type: object
      properties:
        token:
          type: string
          description: "Token for session authentication"
          example: "person00000000.test0000000"
        displayName:
          type: string
          description: name to be displayed
          example: super
        customTexts:
          type: object
          description: An Object containing customtext-strings for the UI as key-value-pairs
          example:
            somestr: string
        flags:
          type: array
          description: |-
            flags with additional information.
              * `codeRequired` that indicates that a second part of authentication is required
        access:
          description: A collection of available obejcts. The keys are type of object.
          type: object
          properties:
            workspaceAdmin:
              type: string
              description: Elements are (numeric) Workspace-Ids. Use `[GET] /workspace/{worksapce_id}` to obtain
                label, user-rights and such.
            superAdmin:
              type: string
              description: No Elements. Presence of this key indicates access to Superadmin-functions for this user.
            test:
              type: string
              description: Elements are booklet-names (not test-ids because unstarted tests don't have one. Through
                the endpoint `[GET] /booklet/{test_name}` the corresponding ids, and if startet, status etc. can be obtained.
            testGroupMonitor:
              type: string
              description: workspace(s)

    workspace:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "example_workspace"
        role:
          type: string
          example: "RW"
        selected:
          type: boolean
          example: false
          description: TODO what does this do?
      required:
        - id

    workspace_list:
      type: array
      description: List of Workspaces
      items:
        $ref: '#/components/schemas/workspace'

    user_list:
      type: array
      description: List of Users
      items:
        $ref: '#/components/schemas/user'

    user:
      type: object
      description: a user
      properties:
        name:
          type: string
          example: super
        id:
          type: string
          example: "1"
        email:
          type: string
          nullable: true
          example: null
        isSuperadmin:
          type: boolean
          example: true
        selected:
          type: boolean
          example: true
          description: TODO what does this do?
        role:
          type: string #dredd does not support enum
          example: "RW"
      required:
        - id
        - name

    file:
      type: object
      description: information about a file
      properties:
        filename:
          type: string
        filesize:
          type: integer
          description: file size in byte
        filesizestr:
          type: string
          description: human readable filesize
        filedatetime:
          type: integer
          description: modification date as unix time stamp
        filedatetimestr:
          type: string
          description: modification date as human readable string
        type:
          type: string
          description: Testtakers | Booklet | Resource | Unit | SysCheck
        typelabel:
          type: string
          description: Testtakers | Booklet | Resource | Unit | SysCheck

    file_list:
      type: array
      description: List of Files
      items:
        $ref: '#/components/schemas/file'

    sys_check:
      type: object
      description: Configuration of a SysCheck
      properties:
        name:
          description: name of the SysCheck as defiend in the XML-file
          type: string
        label:
          description: label to display
          type: string
        questions:
          description: set of questions for the questionaire
          type: array
          items:
            $ref: '#/components/schemas/question_def'
        hasUnit:
          description: is there a unit for this SysCheck?
          type: boolean
        canSave:
          description: is saving SysCheck-Report allowed?
          type: boolean
        customTexts:
          description: CustomTexts
          type: object
        skipNetwork:
          description: skip the network test?
          type: boolean
        downloadSpeed:
          $ref: '#/components/schemas/speed_params'
        uploadSpeed:
          $ref: '#/components/schemas/speed_params'
        workspaceId:
          description: on which workspace is this SysCheck?
          type: number

    speed_params:
      type: object
      description: paramaters of a speed-check
      properties:
        min:
          description: minimal speed to get a `sufficient` rating in **Bytes per second**
          type: number
          example: 1.875e+6
        good:
          description: minimal speed to get a `good` rating in **Bytes per second**
          type: number
          example: 3.75e+6
        maxDevianceBytesPerSecond:
          description: maximal deviance allowed to pass one round of regeression test in **Bytes per second**
          type: number
          example: 100000
        maxErrorsPerSequence:
          description: allow this number of errors in one sequence and still pass, normally 0
          type: integer
          example: 0
        maxSequenceRepetitions:
          description: how many test sequences should be run (if they exceedmax deviance), minimum is 3
          type: integer
          example: 15
        sequenceSizes:
          description: array of numbers describing the packagae sized for each sequence
          type: array
          items:
            type: integer
          example:
            - 400000
            - 800000
            - 1600000
            - 3200000

    question_def:
      type: object
      description: definition of a SysCheck-questionaire
      properties:
        id:
          type: number
          description: identifier of the question
          example: 1
        type:
          description: type of the questions, like 'header', 'string', 'select', 'text', 'check', 'radio'
          type: string
          example: select
        prompt:
          description: Question text
          type: string
          example: "What is the capital of Switzerland?"
        options:
          description: list of options for type `check` or `select`
          type: array
          items:
            type: string
          example:
            - Bern
            - Zurich
        required:
          description: is this question required
          type: boolean
          example: false

    state:
      type: array
      description: An array of state-items.
      items:
        $ref: '#/components/schemas/state_item'

    state_item:
      type: object
      description: Represents a certain entry in the state. Every key-value pair can be taken. For more about test and unit states
      properties:
        key:
          type: string
          example: 'STATE_KEY'
          description: The key of this state
        content:
          type: string
          example: 'STATE_VALUE'
          description: The value of this state. For logs this is optional, since a log can be only a single string.
        timeStamp:
          type: number
          example: 123456798
          description: Because every state change gets logged a timestamp is necessary
      required:
        - key
        - content
        - timeStamp

    log_set:
      type: array
      description: An array of state-items.
      items:
        $ref: '#/components/schemas/log_set_item'

    log_set_item:
      type: object
      description: Represents a certain entry in the state. Every key-value pair can be taken. For more about test and unit states
      properties:
        key:
          type: string
          example: 'STATE_KEY'
          description: The key of this state
        content:
          type: string
          example: 'STATE_VALUE'
          description: The value of this state. For logs this is optional, since a log can be only a single string.
        timeStamp:
          type: number
          example: 123456798
          description: Because every state change gets logged a timestamp is necessary
      required:
        - key
        - timeStamp
